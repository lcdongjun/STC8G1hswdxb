C51 COMPILER V9.60.7.0   MAIN                                                              03/14/2025 21:47:16 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\mcu\Keil_v5\C51\BIN\C51.EXE main.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\list\main.lst) TA
                    -BS(2) OBJECT(.\list\main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "config.h"
  14          #include  "STC8G_H_ADC.h"
  15          #include  "STC8G_H_GPIO.h"
  16          #include  "STC8G_H_Delay.h"
  17          #include  "STC8G_H_UART.h"
  18          #include  "STC8G_H_NVIC.h"
  19          #include  "STC8G_H_Switch.h"
  20          
  21          /*************  功能说明  **************
  22          
  23          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  24          
  25          本程序演示多路ADC查询采样，通过串口发送给上位机，波特率115200,N,8,1。
  26          
  27          下载时, 选择时钟 22.1184MHz (可以在配置文件"config.h"中修改).
  28          
  29          ******************************************/
  30          
  31          
  32          /*************  本地常量声明  **************/
  33          
  34          
  35          /*************  本地变量声明  **************/
  36          
  37          
  38          /*************  本地函数声明  **************/
  39          
  40          
  41          /*************  外部函数和变量声明 *****************/
  42          
  43          
  44          /******************* IO配置函数 *******************/
  45          void  GPIO_config(void)
  46          {
  47   1        //P0.0~P0.6 设置为高阻输入
  48   1        P0_MODE_IN_HIZ(GPIO_Pin_LOW | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6); 
  49   1        P1_MODE_IN_HIZ(GPIO_Pin_All);   //P1.0~P1.7 设置为高阻输入
  50   1        P3_MODE_IO_PU(GPIO_Pin_0 | GPIO_Pin_1); //P3.0,P3.1 设置为准双向口
  51   1      }
  52          
  53          /******************* AD配置函数 *******************/
  54          void  ADC_config(void)
C51 COMPILER V9.60.7.0   MAIN                                                              03/14/2025 21:47:16 PAGE 2   

  55          {
  56   1        ADC_InitTypeDef   ADC_InitStructure;    //结构定义
  57   1      
  58   1        ADC_InitStructure.ADC_SMPduty   = 31;   //ADC 模拟信号采样时间控制, 0~31（注意： SMPDUTY 一定不能设置小于 
             -10）
  59   1        ADC_InitStructure.ADC_CsSetup   = 0;    //ADC 通道选择时间控制 0(默认),1
  60   1        ADC_InitStructure.ADC_CsHold    = 1;    //ADC 通道选择保持时间控制 0,1(默认),2,3
  61   1        ADC_InitStructure.ADC_Speed     = ADC_SPEED_2X16T;    //设置 ADC 工作时钟频率 ADC_SPEED_2X1T~ADC_SPEED_2X16
             -T
  62   1        ADC_InitStructure.ADC_AdjResult = ADC_RIGHT_JUSTIFIED;  //ADC结果调整,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUSTIF
             -IED
  63   1        ADC_Inilize(&ADC_InitStructure);    //初始化
  64   1        ADC_PowerControl(ENABLE);       //ADC电源开关, ENABLE或DISABLE
  65   1        NVIC_ADC_Init(DISABLE,Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Prio
             -rity_2,Priority_3
  66   1      }
  67          
  68          /***************  串口初始化函数 *****************/
  69          void  UART_config(void)
  70          {
  71   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
  72   1      
  73   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  74   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串口2
             -固定使用BRT_Timer2, 所以不用选择)
  75   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率,     110 ~ 115200
  76   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  77   1        UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口2 USART1,USART2,USART3,USART4
  78   1        NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
  79   1        UART1_SW(UART1_SW_P30_P31); //通道切换，选择P3.0, P3.1引脚通信
  80   1      }
  81          
  82          /**********************************************/
  83          void main(void)
  84          {
  85   1        u8  i;
  86   1        u16 j;
  87   1      
  88   1        EAXSFR();   /* 扩展寄存器访问使能 */
  89   1        GPIO_config();
  90   1        UART_config();
  91   1        ADC_config();
  92   1        EA = 1;
  93   1      
  94   1        PrintString1("STC8 AD to UART Test Programme!\r\n");  //UART2发送一个字符串
  95   1      
  96   1        while (1)
  97   1        {
  98   2      
  99   2          for(i=0; i<16; i++)
 100   2          {
 101   3            delay_ms(250);
 102   3      
 103   3            //Get_ADCResult(i);   //参数0~15,查询方式做一次ADC, 丢弃一次
 104   3            j = Get_ADCResult(i); //参数0~15,查询方式做一次ADC, 返回值就是结果,  4096 为错误
 105   3            printf("AD%02bd=%04d ",i,j);  //打印采集结果
 106   3            if((i & 7) == 7)  printf("\r\n");   //每打印8个通道后换行
 107   3      
 108   3          }
 109   2          PrintString1("\r\n");
C51 COMPILER V9.60.7.0   MAIN                                                              03/14/2025 21:47:16 PAGE 3   

 110   2        }
 111   1      }
 112          
 113          
 114          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    185    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
