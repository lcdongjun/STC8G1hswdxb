C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE STC8G_H_NVIC
OBJECT MODULE PLACED IN .\Objects\STC8G_H_NVIC.obj
COMPILER INVOKED BY: D:\mcu\Keil_v5\C51\BIN\C51.EXE Lib\STC8G_H_NVIC.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\main;.\Lib) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\STC8G_H_NVIC.lst) TABS(2) OBJECT(.\Objects\STC8G_H_NVIC.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "STC8G_H_NVIC.h"
  14          
  15          //========================================================================
  16          // 函数: NVIC_Timer0_Init
  17          // 描述: Timer0嵌套向量中断控制器初始化.
  18          // 参数: State:    中断使能状态, ENABLE/DISABLE.
  19          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
  20          // 返回: 执行结果 SUCCESS/FAIL.
  21          // 版本: V1.0, 2020-09-29
  22          //========================================================================
  23          u8 NVIC_Timer0_Init(u8 State, u8 Priority)
  24          {
  25   1        if(State > ENABLE) return FAIL;
  26   1        if(Priority > Priority_3) return FAIL;
  27   1        Timer0_Interrupt(State);
  28   1        Timer0_Priority(Priority);
  29   1        return SUCCESS;
  30   1      }
  31          
  32          //========================================================================
  33          // 函数: NVIC_Timer1_Init
  34          // 描述: Timer1嵌套向量中断控制器初始化.
  35          // 参数: State:    中断使能状态, ENABLE/DISABLE.
  36          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
  37          // 返回: 执行结果 SUCCESS/FAIL.
  38          // 版本: V1.0, 2020-09-29
  39          //========================================================================
  40          u8 NVIC_Timer1_Init(u8 State, u8 Priority)
  41          {
  42   1        if(State > ENABLE) return FAIL;
  43   1        if(Priority > Priority_3) return FAIL;
  44   1        Timer1_Interrupt(State);
  45   1        Timer1_Priority(Priority);
  46   1        return SUCCESS;
  47   1      }
  48          
  49          //========================================================================
  50          // 函数: NVIC_Timer2_Init
  51          // 描述: Timer2嵌套向量中断控制器初始化.
  52          // 参数: State:    中断使能状态, ENABLE/DISABLE.
  53          // 参数: Priority: 中断优先级, NULL.
  54          // 返回: 执行结果 SUCCESS/FAIL.
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 2   

  55          // 版本: V1.0, 2020-09-29
  56          //========================================================================
  57          u8 NVIC_Timer2_Init(u8 State, u8 Priority)
  58          {
  59   1        if(State > ENABLE) return FAIL;
  60   1        if(Priority > Priority_3) return FAIL;
  61   1        Timer2_Interrupt(State);
  62   1        Priority = NULL;
  63   1        return SUCCESS;
  64   1      }
  65          
  66          //========================================================================
  67          // 函数: NVIC_Timer3_Init
  68          // 描述: Timer3嵌套向量中断控制器初始化.
  69          // 参数: State:    中断使能状态, ENABLE/DISABLE.
  70          // 参数: Priority: 中断优先级, NULL.
  71          // 返回: 执行结果 SUCCESS/FAIL.
  72          // 版本: V1.0, 2020-09-29
  73          //========================================================================
  74          u8 NVIC_Timer3_Init(u8 State, u8 Priority)
  75          {
  76   1        if(State > ENABLE) return FAIL;
  77   1        if(Priority > Priority_3) return FAIL;
  78   1        Timer3_Interrupt(State);
  79   1        Priority = NULL;
  80   1        return SUCCESS;
  81   1      }
  82          
  83          //========================================================================
  84          // 函数: NVIC_Timer4_Init
  85          // 描述: Timer4嵌套向量中断控制器初始化.
  86          // 参数: State:    中断使能状态, ENABLE/DISABLE.
  87          // 参数: Priority: 中断优先级, NULL.
  88          // 返回: 执行结果 SUCCESS/FAIL.
  89          // 版本: V1.0, 2020-09-29
  90          //========================================================================
  91          u8 NVIC_Timer4_Init(u8 State, u8 Priority)
  92          {
  93   1        if(State > ENABLE) return FAIL;
  94   1        if(Priority > Priority_3) return FAIL;
  95   1        Timer4_Interrupt(State);
  96   1        Priority = NULL;
  97   1        return SUCCESS;
  98   1      }
  99          
 100          //========================================================================
 101          // 函数: NVIC_INT0_Init
 102          // 描述: INT0嵌套向量中断控制器初始化.
 103          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 104          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 105          // 返回: 执行结果 SUCCESS/FAIL.
 106          // 版本: V1.0, 2020-09-29
 107          //========================================================================
 108          u8 NVIC_INT0_Init(u8 State, u8 Priority)
 109          {
 110   1        if(State > ENABLE) return FAIL;
 111   1        if(Priority > Priority_3) return FAIL;
 112   1        INT0_Interrupt(State);
 113   1        INT0_Priority(Priority);
 114   1        return SUCCESS;
 115   1      }
 116          
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 3   

 117          //========================================================================
 118          // 函数: NVIC_INT1_Init
 119          // 描述: INT1嵌套向量中断控制器初始化.
 120          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 121          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 122          // 返回: 执行结果 SUCCESS/FAIL.
 123          // 版本: V1.0, 2020-09-29
 124          //========================================================================
 125          u8 NVIC_INT1_Init(u8 State, u8 Priority)
 126          {
 127   1        if(State > ENABLE) return FAIL;
 128   1        if(Priority > Priority_3) return FAIL;
 129   1        INT1_Interrupt(State);
 130   1        INT1_Priority(Priority);
 131   1        return SUCCESS;
 132   1      }
 133          
 134          //========================================================================
 135          // 函数: NVIC_INT2_Init
 136          // 描述: INT2嵌套向量中断控制器初始化.
 137          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 138          // 参数: Priority: 中断优先级, NULL.
 139          // 返回: 执行结果 SUCCESS/FAIL.
 140          // 版本: V1.0, 2020-09-29
 141          //========================================================================
 142          u8 NVIC_INT2_Init(u8 State, u8 Priority)
 143          {
 144   1        if(State > ENABLE) return FAIL;
 145   1        INT2_Interrupt(State);
 146   1        Priority = NULL;
 147   1        return SUCCESS;
 148   1      }
 149          
 150          //========================================================================
 151          // 函数: NVIC_INT3_Init
 152          // 描述: INT3嵌套向量中断控制器初始化.
 153          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 154          // 参数: Priority: 中断优先级, NULL.
 155          // 返回: 执行结果 SUCCESS/FAIL.
 156          // 版本: V1.0, 2020-09-29
 157          //========================================================================
 158          u8 NVIC_INT3_Init(u8 State, u8 Priority)
 159          {
 160   1        if(State > ENABLE) return FAIL;
 161   1        INT3_Interrupt(State);
 162   1        Priority = NULL;
 163   1        return SUCCESS;
 164   1      }
 165          
 166          //========================================================================
 167          // 函数: NVIC_INT4_Init
 168          // 描述: INT4嵌套向量中断控制器初始化.
 169          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 170          // 参数: Priority: 中断优先级, NULL.
 171          // 返回: 执行结果 SUCCESS/FAIL.
 172          // 版本: V1.0, 2020-09-29
 173          //========================================================================
 174          u8 NVIC_INT4_Init(u8 State, u8 Priority)
 175          {
 176   1        if(State > ENABLE) return FAIL;
 177   1        INT4_Interrupt(State);
 178   1        Priority = NULL;
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 4   

 179   1        return SUCCESS;
 180   1      }
 181          
 182          //========================================================================
 183          // 函数: NVIC_ADC_Init
 184          // 描述: ADC嵌套向量中断控制器初始化.
 185          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 186          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 187          // 返回: 执行结果 SUCCESS/FAIL.
 188          // 版本: V1.0, 2020-09-29
 189          //========================================================================
 190          u8 NVIC_ADC_Init(u8 State, u8 Priority)
 191          {
 192   1        if(State > ENABLE) return FAIL;
 193   1        if(Priority > Priority_3) return FAIL;
 194   1        ADC_Interrupt(State);
 195   1        ADC_Priority(Priority);
 196   1        return SUCCESS;
 197   1      }
 198          
 199          //========================================================================
 200          // 函数: NVIC_CMP_Init
 201          // 描述: 比较器嵌套向量中断控制器初始化.
 202          // 参数: State:    中断使能状态, RISING_EDGE/FALLING_EDGE/DISABLE.
 203          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 204          // 返回: 执行结果 SUCCESS/FAIL.
 205          // 版本: V1.0, 2020-09-29
 206          //========================================================================
 207          u8 NVIC_CMP_Init(u8 State, u8 Priority)
 208          {
 209   1        if(Priority > Priority_3) return FAIL;
 210   1        if(State & RISING_EDGE) CMPCR1 |= PIE;      //允许上升沿中断
 211   1        else  CMPCR1 &= ~PIE;     //禁止上升沿中断
 212   1        if(State & FALLING_EDGE)  CMPCR1 |= NIE;    //允许下降沿中断
 213   1        else  CMPCR1 &= ~NIE;     //禁止上升沿中断
 214   1        CMP_Priority(Priority);
 215   1        return SUCCESS;
 216   1      }
 217          
 218          //========================================================================
 219          // 函数: NVIC_I2C_Init
 220          // 描述: I2C嵌套向量中断控制器初始化.
 221          // 参数: Mode:     模式, I2C_Mode_Master/I2C_Mode_Slave.
 222          // 参数: State:    中断使能状态, I2C_Mode_Master: ENABLE/DISABLE.
 223          //                              I2C_Mode_Slave: I2C_ESTAI/I2C_ERXI/I2C_ETXI/I2C_ESTOI/DISABLE.
 224          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 225          // 返回: 执行结果 SUCCESS/FAIL.
 226          // 版本: V1.0, 2020-09-29
 227          //========================================================================
 228          u8 NVIC_I2C_Init(u8 Mode, u8 State, u8 Priority)
 229          {
 230   1        if(Mode > I2C_Mode_Master) return FAIL;
 231   1        if(Priority > Priority_3) return FAIL;
 232   1        if(Mode == I2C_Mode_Master)
 233   1        {
 234   2          I2C_Master_Inturrupt(State);
 235   2        }
 236   1        else if(Mode == I2C_Mode_Slave)
 237   1        {
 238   2          I2CSLCR = (I2CSLCR & ~0x78) | State;
 239   2        }
 240   1        CMP_Priority(Priority);
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 5   

 241   1        return SUCCESS;
 242   1      }
 243          
 244          //========================================================================
 245          // 函数: NVIC_UART1_Init
 246          // 描述: UART1嵌套向量中断控制器初始化.
 247          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 248          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 249          // 返回: 执行结果 SUCCESS/FAIL.
 250          // 版本: V1.0, 2020-09-29
 251          //========================================================================
 252          u8 NVIC_UART1_Init(u8 State, u8 Priority)
 253          {
 254   1        if(State > ENABLE) return FAIL;
 255   1        if(Priority > Priority_3) return FAIL;
 256   1        UART1_Interrupt(State);
 257   1        UART1_Priority(Priority);
 258   1        return SUCCESS;
 259   1      }
 260          
 261          //========================================================================
 262          // 函数: NVIC_UART2_Init
 263          // 描述: UART2嵌套向量中断控制器初始化.
 264          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 265          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 266          // 返回: 执行结果 SUCCESS/FAIL.
 267          // 版本: V1.0, 2020-09-29
 268          //========================================================================
 269          u8 NVIC_UART2_Init(u8 State, u8 Priority)
 270          {
 271   1        if(State > ENABLE) return FAIL;
 272   1        if(Priority > Priority_3) return FAIL;
 273   1        UART2_Interrupt(State);
 274   1        UART2_Priority(Priority);
 275   1        return SUCCESS;
 276   1      }
 277          
 278          //========================================================================
 279          // 函数: NVIC_UART3_Init
 280          // 描述: UART3嵌套向量中断控制器初始化.
 281          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 282          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 283          // 返回: 执行结果 SUCCESS/FAIL.
 284          // 版本: V1.0, 2020-09-29
 285          //========================================================================
 286          u8 NVIC_UART3_Init(u8 State, u8 Priority)
 287          {
 288   1        if(State > ENABLE) return FAIL;
 289   1        if(Priority > Priority_3) return FAIL;
 290   1        UART3_Interrupt(State);
 291   1        UART3_Priority(Priority);
 292   1        return SUCCESS;
 293   1      }
 294          
 295          //========================================================================
 296          // 函数: NVIC_UART4_Init
 297          // 描述: UART4嵌套向量中断控制器初始化.
 298          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 299          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 300          // 返回: 执行结果 SUCCESS/FAIL.
 301          // 版本: V1.0, 2020-09-29
 302          //========================================================================
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 6   

 303          u8 NVIC_UART4_Init(u8 State, u8 Priority)
 304          {
 305   1        if(State > ENABLE) return FAIL;
 306   1        if(Priority > Priority_3) return FAIL;
 307   1        UART4_Interrupt(State);
 308   1        UART4_Priority(Priority);
 309   1        return SUCCESS;
 310   1      }
 311          
 312          //========================================================================
 313          // 函数: NVIC_SPI_Init
 314          // 描述: SPI嵌套向量中断控制器初始化.
 315          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 316          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 317          // 返回: 执行结果 SUCCESS/FAIL.
 318          // 版本: V1.0, 2020-09-29
 319          //========================================================================
 320          u8 NVIC_SPI_Init(u8 State, u8 Priority)
 321          {
 322   1        if(State > ENABLE) return FAIL;
 323   1        if(Priority > Priority_3) return FAIL;
 324   1        SPI_Interrupt(State);
 325   1        SPI_Priority(Priority);
 326   1        return SUCCESS;
 327   1      }
 328          
 329          //========================================================================
 330          // 函数: NVIC_PWM_Init
 331          // 描述: PWM嵌套向量中断控制器初始化.
 332          // 参数: Channel:  通道, PWMA/PWMB.
 333          // 参数: State:    中断使能状态, PWM_BIE/PWM_TIE/PWM_COMIE/PWM_CC8IE~PWM_CC1IE/PWM_UIE/DISABLE.
 334          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 335          // 返回: 执行结果 SUCCESS/FAIL.
 336          // 版本: V1.0, 2020-09-29
 337          //========================================================================
 338          u8 NVIC_PWM_Init(u8 Channel, u8 State, u8 Priority)
 339          {
 340   1        if(Channel > PWMB) return FAIL;
 341   1        if(Priority > Priority_3) return FAIL;
 342   1        switch(Channel)
 343   1        {
 344   2          case PWMA:
 345   2            PWMA_IER = State;
 346   2            PWMA_Priority(Priority);
 347   2          break;
 348   2      
 349   2          case PWMB:
 350   2            PWMB_IER = State;
 351   2            PWMB_Priority(Priority);
 352   2          break;
 353   2      
 354   2          default:
 355   2            PWMB_IER = State;
 356   2            Priority = NULL;
 357   2          break;
 358   2        }
 359   1        return SUCCESS;
 360   1      }
 361          
 362          //========================================================================
 363          // 函数: NVIC_RTC_Init
 364          // 描述: SPI嵌套向量中断控制器初始化.
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 7   

 365          // 参数: State:    中断使能状态, 中断使能, 0x80:闹钟中断, 0x40:日中断, 0x20:小时中断, 0x10:分钟中断, 0x08:
             -秒中断, 0x04:1/2秒中断, 0x02:1/8秒中断, 0x01:1/32秒中断 /DISABLE.
 366          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 367          // 返回: 执行结果 SUCCESS/FAIL.
 368          // 版本: V1.0, 2020-09-29
 369          //========================================================================
 370          u8 NVIC_RTC_Init(u8 State, u8 Priority)
 371          {
 372   1        if(Priority <= Priority_3) RTC_Priority(Priority); else  return FAIL;
 373   1        RTC_Interrupt(State); 
 374   1        return SUCCESS;
 375   1      }
 376          
 377          //========================================================================
 378          // 函数: NVIC_DMA_ADC_Init
 379          // 描述: DMA ADC嵌套向量中断控制器初始化.
 380          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 381          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 382          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 383          // 返回: 执行结果 SUCCESS/FAIL.
 384          // 版本: V1.0, 2021-05-21
 385          //========================================================================
 386          u8 NVIC_DMA_ADC_Init(u8 State, u8 Priority, u8 Bus_Priority)
 387          {
 388   1        DMA_ADC_CFG &= ~0x0f;
 389   1        if(Priority <= Priority_3) DMA_ADC_CFG |= Priority << 2;
 390   1        if(Bus_Priority <= Priority_3) DMA_ADC_CFG |= Bus_Priority; //数据总线访问优先级
 391   1        if(State == ENABLE)
 392   1          DMA_ADC_CFG |= 0x80;    //bit7 1:Enable Interrupt
 393   1        else
 394   1          DMA_ADC_CFG &= ~0x80;   //bit7 0:Disable Interrupt
 395   1        return SUCCESS;
 396   1      }
 397          
 398          //========================================================================
 399          // 函数: NVIC_DMA_M2M_Init
 400          // 描述: DMA M2M嵌套向量中断控制器初始化.
 401          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 402          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 403          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 404          // 返回: 执行结果 SUCCESS/FAIL.
 405          // 版本: V1.0, 2021-05-21
 406          //========================================================================
 407          u8 NVIC_DMA_M2M_Init(u8 State, u8 Priority, u8 Bus_Priority)
 408          {
 409   1        DMA_M2M_CFG &= ~0x0f;
 410   1        if(Priority <= Priority_3) DMA_M2M_CFG |= Priority << 2;
 411   1        if(Bus_Priority <= Priority_3) DMA_M2M_CFG |= Bus_Priority; //数据总线访问优先级
 412   1        if(State == ENABLE)
 413   1          DMA_M2M_CFG |= 0x80;    //bit7 1:Enable Interrupt
 414   1        else
 415   1          DMA_M2M_CFG &= ~0x80;   //bit7 0:Disable Interrupt
 416   1        return SUCCESS;
 417   1      }
 418          
 419          //========================================================================
 420          // 函数: NVIC_DMA_SPI_Init
 421          // 描述: DMA SPI嵌套向量中断控制器初始化.
 422          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 423          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 424          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 425          // 返回: 执行结果 SUCCESS/FAIL.
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 8   

 426          // 版本: V1.0, 2021-05-27
 427          //========================================================================
 428          u8 NVIC_DMA_SPI_Init(u8 State, u8 Priority, u8 Bus_Priority)
 429          {
 430   1        DMA_SPI_CFG &= ~0x0f;
 431   1        if(Priority <= Priority_3) DMA_SPI_CFG |= Priority << 2;
 432   1        if(Bus_Priority <= Priority_3) DMA_SPI_CFG |= Bus_Priority; //数据总线访问优先级
 433   1        if(State == ENABLE)
 434   1          DMA_SPI_CFG |= 0x80;    //bit7 1:Enable Interrupt
 435   1        else
 436   1          DMA_SPI_CFG &= ~0x80;   //bit7 0:Disable Interrupt
 437   1        return SUCCESS;
 438   1      }
 439          
 440          //========================================================================
 441          // 函数: NVIC_DMA_UART1_Tx_Init
 442          // 描述: DMA UART1 Tx嵌套向量中断控制器初始化.
 443          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 444          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 445          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 446          // 返回: 执行结果 SUCCESS/FAIL.
 447          // 版本: V1.0, 2021-05-21
 448          //========================================================================
 449          u8 NVIC_DMA_UART1_Tx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 450          {
 451   1        DMA_UR1T_CFG &= ~0x0f;
 452   1        if(Priority <= Priority_3) DMA_UR1T_CFG |= Priority << 2;
 453   1        if(Bus_Priority <= Priority_3) DMA_UR1T_CFG |= Bus_Priority;  //数据总线访问优先级
 454   1        if(State == ENABLE)
 455   1          DMA_UR1T_CFG |= 0x80;   //bit7 1:Enable Interrupt
 456   1        else
 457   1          DMA_UR1T_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 458   1        return SUCCESS;
 459   1      }
 460          
 461          //========================================================================
 462          // 函数: NVIC_DMA_UART1_Rx_Init
 463          // 描述: DMA UART1 Rx嵌套向量中断控制器初始化.
 464          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 465          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 466          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 467          // 返回: 执行结果 SUCCESS/FAIL.
 468          // 版本: V1.0, 2021-05-21
 469          //========================================================================
 470          u8 NVIC_DMA_UART1_Rx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 471          {
 472   1        DMA_UR1R_CFG &= ~0x0f;
 473   1        if(Priority <= Priority_3) DMA_UR1R_CFG |= Priority << 2;
 474   1        if(Bus_Priority <= Priority_3) DMA_UR1R_CFG |= Bus_Priority;  //数据总线访问优先级
 475   1        if(State == ENABLE)
 476   1          DMA_UR1R_CFG |= 0x80;   //bit7 1:Enable Interrupt
 477   1        else
 478   1          DMA_UR1R_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 479   1        return SUCCESS;
 480   1      }
 481          
 482          //========================================================================
 483          // 函数: NVIC_DMA_UART2_Tx_Init
 484          // 描述: DMA UART2 Tx嵌套向量中断控制器初始化.
 485          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 486          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 487          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 9   

 488          // 返回: 执行结果 SUCCESS/FAIL.
 489          // 版本: V1.0, 2021-05-21
 490          //========================================================================
 491          u8 NVIC_DMA_UART2_Tx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 492          {
 493   1        DMA_UR2T_CFG &= ~0x0f;
 494   1        if(Priority <= Priority_3) DMA_UR2T_CFG |= Priority << 2;
 495   1        if(Bus_Priority <= Priority_3) DMA_UR2T_CFG |= Bus_Priority;  //数据总线访问优先级
 496   1        if(State == ENABLE)
 497   1          DMA_UR2T_CFG |= 0x80;   //bit7 1:Enable Interrupt
 498   1        else
 499   1          DMA_UR2T_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 500   1        return SUCCESS;
 501   1      }
 502          
 503          //========================================================================
 504          // 函数: NVIC_DMA_UART2_Rx_Init
 505          // 描述: DMA UART2 Rx嵌套向量中断控制器初始化.
 506          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 507          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 508          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 509          // 返回: 执行结果 SUCCESS/FAIL.
 510          // 版本: V1.0, 2021-05-21
 511          //========================================================================
 512          u8 NVIC_DMA_UART2_Rx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 513          {
 514   1        DMA_UR2R_CFG &= ~0x0f;
 515   1        if(Priority <= Priority_3) DMA_UR2R_CFG |= Priority << 2;
 516   1        if(Bus_Priority <= Priority_3) DMA_UR2R_CFG |= Bus_Priority;  //数据总线访问优先级
 517   1        if(State == ENABLE)
 518   1          DMA_UR2R_CFG |= 0x80;   //bit7 1:Enable Interrupt
 519   1        else
 520   1          DMA_UR2R_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 521   1        return SUCCESS;
 522   1      }
 523          
 524          //========================================================================
 525          // 函数: NVIC_DMA_UART3_Tx_Init
 526          // 描述: DMA UART3 Tx嵌套向量中断控制器初始化.
 527          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 528          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 529          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 530          // 返回: 执行结果 SUCCESS/FAIL.
 531          // 版本: V1.0, 2021-05-21
 532          //========================================================================
 533          u8 NVIC_DMA_UART3_Tx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 534          {
 535   1        DMA_UR3T_CFG &= ~0x0f;
 536   1        if(Priority <= Priority_3) DMA_UR3T_CFG |= Priority << 2;
 537   1        if(Bus_Priority <= Priority_3) DMA_UR3T_CFG |= Bus_Priority;  //数据总线访问优先级
 538   1        if(State == ENABLE)
 539   1          DMA_UR3T_CFG |= 0x80;   //bit7 1:Enable Interrupt
 540   1        else
 541   1          DMA_UR3T_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 542   1        return SUCCESS;
 543   1      }
 544          
 545          //========================================================================
 546          // 函数: NVIC_DMA_UART3_Rx_Init
 547          // 描述: DMA UART3 Rx嵌套向量中断控制器初始化.
 548          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 549          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 10  

 550          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 551          // 返回: 执行结果 SUCCESS/FAIL.
 552          // 版本: V1.0, 2021-05-21
 553          //========================================================================
 554          u8 NVIC_DMA_UART3_Rx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 555          {
 556   1        DMA_UR3R_CFG &= ~0x0f;
 557   1        if(Priority <= Priority_3) DMA_UR3R_CFG |= Priority << 2;
 558   1        if(Bus_Priority <= Priority_3) DMA_UR3R_CFG |= Bus_Priority;  //数据总线访问优先级
 559   1        if(State == ENABLE)
 560   1          DMA_UR3R_CFG |= 0x80;   //bit7 1:Enable Interrupt
 561   1        else
 562   1          DMA_UR3R_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 563   1        return SUCCESS;
 564   1      }
 565          
 566          //========================================================================
 567          // 函数: NVIC_DMA_UART4_Tx_Init
 568          // 描述: DMA UART4 Tx嵌套向量中断控制器初始化.
 569          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 570          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 571          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 572          // 返回: 执行结果 SUCCESS/FAIL.
 573          // 版本: V1.0, 2021-05-21
 574          //========================================================================
 575          u8 NVIC_DMA_UART4_Tx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 576          {
 577   1        DMA_UR4T_CFG &= ~0x0f;
 578   1        if(Priority <= Priority_3) DMA_UR4T_CFG |= Priority << 2;
 579   1        if(Bus_Priority <= Priority_3) DMA_UR4T_CFG |= Bus_Priority;  //数据总线访问优先级
 580   1        if(State == ENABLE)
 581   1          DMA_UR4T_CFG |= 0x80;   //bit7 1:Enable Interrupt
 582   1        else
 583   1          DMA_UR4T_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 584   1        return SUCCESS;
 585   1      }
 586          
 587          //========================================================================
 588          // 函数: NVIC_DMA_UART4_Rx_Init
 589          // 描述: DMA UART4 Rx嵌套向量中断控制器初始化.
 590          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 591          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 592          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 593          // 返回: 执行结果 SUCCESS/FAIL.
 594          // 版本: V1.0, 2021-05-21
 595          //========================================================================
 596          u8 NVIC_DMA_UART4_Rx_Init(u8 State, u8 Priority, u8 Bus_Priority)
 597          {
 598   1        DMA_UR4R_CFG &= ~0x0f;
 599   1        if(Priority <= Priority_3) DMA_UR4R_CFG |= Priority << 2;
 600   1        if(Bus_Priority <= Priority_3) DMA_UR4R_CFG |= Bus_Priority;  //数据总线访问优先级
 601   1        if(State == ENABLE)
 602   1          DMA_UR4R_CFG |= 0x80;   //bit7 1:Enable Interrupt
 603   1        else
 604   1          DMA_UR4R_CFG &= ~0x80;  //bit7 0:Disable Interrupt
 605   1        return SUCCESS;
 606   1      }
 607          
 608          //========================================================================
 609          // 函数: NVIC_DMA_LCM_Init
 610          // 描述: DMA LCM嵌套向量中断控制器初始化.
 611          // 参数: State:    中断使能状态, ENABLE/DISABLE.
C51 COMPILER V9.60.7.0   STC8G_H_NVIC                                                      03/14/2025 22:15:45 PAGE 11  

 612          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 613          // 参数: Bus_Priority: 数据总线访问优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 614          // 返回: 执行结果 SUCCESS/FAIL.
 615          // 版本: V1.0, 2021-05-21
 616          //========================================================================
 617          u8 NVIC_DMA_LCM_Init(u8 State, u8 Priority, u8 Bus_Priority)
 618          {
 619   1        DMA_LCM_CFG &= ~0x0f;
 620   1        if(Priority <= Priority_3) DMA_LCM_CFG |= Priority << 2;
 621   1        if(Bus_Priority <= Priority_3) DMA_LCM_CFG |= Bus_Priority; //数据总线访问优先级
 622   1        if(State == ENABLE)
 623   1          DMA_LCM_CFG |= 0x80;    //bit7 1:Enable Interrupt
 624   1        else
 625   1          DMA_LCM_CFG &= ~0x80;   //bit7 0:Disable Interrupt
 626   1        return SUCCESS;
 627   1      }
 628          
 629          //========================================================================
 630          // 函数: NVIC_LCM_Init
 631          // 描述: LCM嵌套向量中断控制器初始化.
 632          // 参数: State:    中断使能状态, ENABLE/DISABLE.
 633          // 参数: Priority: 中断优先级, Priority_0,Priority_1,Priority_2,Priority_3.
 634          // 返回: 执行结果 SUCCESS/FAIL.
 635          // 版本: V1.0, 2021-05-21
 636          //========================================================================
 637          u8 NVIC_LCM_Init(u8 State, u8 Priority)
 638          {
 639   1        LCMIFCFG &= ~0x30;
 640   1        if(Priority <= Priority_3) LCMIFCFG |= Priority << 4;
 641   1        if(State == ENABLE)
 642   1          LCMIFCFG |= 0x80;   //bit7 1:Enable Interrupt
 643   1        else
 644   1          LCMIFCFG &= ~0x80;    //bit7 0:Disable Interrupt
 645   1        return SUCCESS;
 646   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1849    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
